(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('tsparticles')) :
    typeof define === 'function' && define.amd ? define('ng-particles', ['exports', '@angular/core', 'tsparticles'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['ng-particles'] = {}, global.ng.core, global.tsparticles));
}(this, (function (exports, core, tsparticles) { 'use strict';

    var NgParticlesComponent = /** @class */ (function () {
        function NgParticlesComponent() {
            this.particlesLoaded = new core.EventEmitter();
        }
        NgParticlesComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            tsparticles.tsParticles.load(this.id, this.options).then(function (container) {
                _this.particlesLoaded.emit(container);
            });
        };
        return NgParticlesComponent;
    }());
    NgParticlesComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'Particles',
                    template: "\n      <div [id]=\"id\"></div> "
                },] }
    ];
    NgParticlesComponent.propDecorators = {
        options: [{ type: core.Input }],
        id: [{ type: core.Input }],
        particlesLoaded: [{ type: core.Output }]
    };

    var NgParticlesModule = /** @class */ (function () {
        function NgParticlesModule() {
        }
        return NgParticlesModule;
    }());
    NgParticlesModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [NgParticlesComponent],
                    imports: [],
                    exports: [NgParticlesComponent]
                },] }
    ];

    /*
     * Public API Surface of ng-particles
     */

    /**
     * Generated bundle index. Do not edit.
     */

    Object.keys(tsparticles).forEach(function (k) {
        if (k !== 'default') Object.defineProperty(exports, k, {
            enumerable: true,
            get: function () {
                return tsparticles[k];
            }
        });
    });
    exports.NgParticlesComponent = NgParticlesComponent;
    exports.NgParticlesModule = NgParticlesModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ng-particles.umd.js.map
